version: '3.8'

services:
  postgres:
    container_name: pastebin_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: akorovai
      POSTGRES_PASSWORD: pass
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - microservices-network
    restart: unless-stopped

  pastebin_redis_hash:
    image: redis:latest
    container_name: pastebin_redis_hash
    restart: unless-stopped
    ports:
      - '7777:6379'
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./data:/data
    networks:
      - microservices-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: pastebin_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-network

  pastebin_redis_users:
    image: redis:latest
    container_name: pastebin_redis_users
    ports:
      - "6666:6379"
    volumes:
      - ./data:/data
    command: redis-server --save 60 1 --loglevel warning
    restart: unless-stopped
    networks:
      - microservices-network

  pastebin_redis_posts:
    image: redis:latest
    container_name: pastebin_redis_posts
    ports:
      - "5555:6379"
    volumes:
      - ./data:/data
    command: redis-server --save 60 1 --loglevel warning
    restart: unless-stopped
    networks:
      - microservices-network


networks:
  microservices-network:
    driver: bridge

volumes:
  postgres: